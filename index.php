<?php

// Database connection (vulnerable to SQL injection if not handled properly)
$conn = mysqli_connect("database", "posty", "123456", "posty");

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session Management (for login status)
session_start();

// Handle login/signup/post actions (vulnerable to various attacks if not sanitized and validated)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST["login"])) {
        $username = $_POST["username"];
        $password = $_POST["password"];

        // IMPORTANT: Sanitize and validate input before using it in a query!
        // ... (e.g., use mysqli_real_escape_string() or prepared statements) ...

        // Query the database to check if the username and password match
        $sql = "SELECT * FROM users WHERE username = '$username' AND password = '$password'"; // Vulnerable to SQL injection!
       
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 1) {
            // Login successful
            $row = mysqli_fetch_assoc($result);
            $_SESSION["user_id"] = $row["id"]; // Store user ID in session
            $_SESSION["username"] = $row["username"]; 
            header("Location: index.php"); // Redirect to the same page (or a different page if needed)
            exit(); 
        } else {
            // Login failed
            $login_error = "Invalid username or password.";
        }
    } elseif (isset($_POST["signup"])) {
        // ... signup logic ... 
        // (Handle user registration, store user data in the database, etc.)
        echo "Signup logic goes here"; // Replace with actual signup handling
    } elseif (isset($_POST["post"])) {
        // ... post creation logic ...
        if (isset($_SESSION["user_id"])) { // Check if user is logged in
            $content = $_POST["content"];

            // IMPORTANT: Sanitize and validate input before using it in a query!
            // ... (e.g., use mysqli_real_escape_string() or prepared statements) ...

            $user_id = $_SESSION["user_id"];
            $sql = "INSERT INTO posts (user_id, content) VALUES ('$user_id', '$content')"; // Vulnerable to SQL injection!
            if (mysqli_query($conn, $sql)) {
                // Post created successfully
                header("Location: index.php"); // Redirect after posting
                exit();
            } else {
                // Error creating post
                $post_error = "Error creating post. Please try again.";
            }
        } else {
            // User not logged in, redirect to login
            header("Location: index.php");
            exit();
        }
    } elseif (isset($_POST["delete"])) {
        // ... post deletion logic ... 
        if (isset($_SESSION["user_id"])) { // Check if user is logged in
            $post_id = $_POST["post_id"]; 

            // IMPORTANT: Sanitize and validate input before using it in a query!
            // ... (e.g., use mysqli_real_escape_string() or prepared statements) ...

            $sql = "DELETE FROM posts WHERE id = '$post_id' AND user_id = '{$_SESSION["user_id"]}'"; // Vulnerable to SQL injection!
            if (mysqli_query($conn, $sql)) {
                // Post deleted successfully
                header("Location: index.php"); // Redirect after deleting
                exit();
            } else {
                // Error deleting post
                $delete_error = "Error deleting post. Please try again.";
            }
        } else {
            // User not logged in, redirect to login
            header("Location: index.php");
            exit();
        }
    }
}

// Fetch and display posts (potential for XSS if output is not escaped) - Only if logged in
if (isset($_SESSION["user_id"])) {
    $sql = "SELECT p.*, u.username 
            FROM posts p
            INNER JOIN users u ON p.user_id = u.id
            ORDER BY p.timestamp DESC"; 
    $result = mysqli_query($conn, $sql);
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Social Media App</title>
    <!-- Bootstrap and jQuery CDN links -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <!-- Include CKEditor (replace with your preferred rich text editor) -->
    <script src="https://cdn.ckeditor.com/4.16.2/standard/ckeditor.js"></script> 

    <style>
        .post {
            border: 1px solid #ccc;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 5px;
        }
        .post-actions {
            margin-top: 10px;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>My Social Media App</h1>

    <?php if (isset($_SESSION["user_id"])) : ?> 
        <!-- User is logged in -->
        <p>Welcome, <?php echo $_SESSION["username"]; ?>! <a href="logout.php">Logout</a></p>

        <!-- Post Button (to toggle post form) -->
        <button id="showPostFormBtn" class="btn btn-primary">Create New Post</button>

        <!-- Post Form (with CKEditor, initially hidden) -->
        <div id="postForm" style="display: none;"> 
            <form method="post">
                <?php if (isset($post_error)) : ?>
                    <div class="alert alert-danger"><?php echo $post_error; ?></div>
                <?php endif; ?>
                <div class="form-group">
                    <textarea class="form-control" name="content" id="editor1" rows="10" cols="80"></textarea>
                    <script>
                        CKEDITOR.replace( 'editor1' );
                    </script>
                </div>
                <button type="submit" class="btn btn-primary" name="post">Post</button>
            </form>
        </div>

        <!-- Display Posts -->
        <?php if (isset($result) && mysqli_num_rows($result) > 0) : ?>
            <?php while($row = mysqli_fetch_assoc($result)) : ?>
                <div class="post">
                    <p><strong><?php echo htmlspecialchars($row["username"]); ?></strong></p> 
                    <p><?php echo $row["content"]; ?></p> <!-- Note: No htmlspecialchars() here for XSS testing -->

                    <?php if ($row["user_id"] == $_SESSION["user_id"]) : ?> 
                        <!-- Show edit/delete buttons only for the logged-in user's posts -->
                        <div class="post-actions">
                            <a href="edit_post.php?post_id=<?php echo $row["id"]; ?>" class="btn btn-warning btn-sm">Edit</a>
                            <form method="post" style="display: inline-block;"> 
                                <?php if (isset($delete_error)) : ?>
                                    <div class="alert alert-danger"><?php echo $delete_error; ?></div>
                                <?php endif; ?>
                                <input type="hidden" name="post_id" value="<?php echo $row["id"]; ?>">
                                <button type="submit" class="btn btn-danger btn-sm" name="delete">Delete</button>
                            </form>
                        </div>
                    <?php endif; ?>
                </div>
            <?php endwhile; ?>
        <?php else : ?>
            <p>No posts yet.</p>
        <?php endif; ?>

    <?php else : ?>
        <!-- User is not logged in -->
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <h2 class="text-center">Login</h2>
                <?php if (isset($login_error)) : ?>
                    <div class="alert alert-danger"><?php echo $login_error; ?></div>
                <?php endif; ?>
                <form method="post"> 
                    <div class="form-group">
                        <label for="username">Username:</label>
                        <input type="text" class="form-control" id="username" name="username" placeholder="Enter username" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Password:</label>
                        <input type="password" class="form-control" id="password" name="password" placeholder="Enter password" required>
                    </div>
                    <button type="submit" class="btn btn-primary btn-block" name="login">Login</button>
                </form>
                <p class="text-center">Don't have an account? <a href="signup.php">Sign Up</a></p> 
            </div>
        </div>
    <?php endif; ?>

</div>

<script>
    $(document).ready(function() {
        $("#showPostFormBtn").click(function() {
            $("#postForm").toggle(); 
        });
    });
</script>

</body>
</html>
